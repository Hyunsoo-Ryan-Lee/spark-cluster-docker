version: '3'
services:
  bd-pyspark-jupyter:
    image: hyunsoolee0506/sparkcluster:3.3.0
    container_name: pyspark-jupyter-lab
    ports:
        - 8888:8888
        - 4040:4040
    environment:
        JUPYTER_PORT: 8888
        SPARK_UI_PORT: 4040
    volumes:
        - spark_data:/data:rw
        - ./jupyter-volume:/home/workspace
    restart: always
  bd-spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: bd-spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - ENABLE_INIT_DAEMON=true
    volumes:
        - spark_data:/data:rw
    restart: always
  bd-spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: bd-spark-worker-1
    depends_on:
      - bd-spark-master
    ports:
      - "8081:8081"
    stdin_open: true
    tty: true
    environment:
      - "SPARK_MASTER=spark://bd-spark-master:7077"
    volumes:
        - spark_data:/data:rw
    restart: always
  bd-spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: bd-spark-worker-2
    depends_on:
      - bd-spark-master
    ports:
      - "8082:8081"
    stdin_open: true
    tty: true
    environment:
      - "SPARK_MASTER=spark://bd-spark-master:7077"
    volumes:
        - spark_data:/data:rw
    restart: always
  bd-spark-worker-3:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: bd-spark-worker-3
    depends_on:
      - bd-spark-master
    ports:
      - "8083:8081"
    stdin_open: true
    tty: true
    environment:
      - "SPARK_MASTER=spark://bd-spark-master:7077"
    volumes:
        - spark_data:/data:rw
    restart: always
  bd-spark-history-server:
    image: bde2020/spark-history-server:3.3.0-hadoop3.3
    container_name: bd-spark-history-server
    depends_on:
      - bd-spark-master
    ports:
      - "18081:18081"
    volumes:
      - /tmp/spark-events-local:/tmp/spark-events
    restart: always
volumes:
  spark_data: